import{r as s,j as f}from"./app-DvGGSOt5.js";function h(e,n){typeof e=="function"?e(n):e!=null&&(e.current=n)}function m(...e){return n=>e.forEach(t=>h(t,n))}function P(...e){return s.useCallback(m(...e),e)}var y=s.forwardRef((e,n)=>{const{children:t,...r}=e,o=s.Children.toArray(t),l=o.find(R);if(l){const i=l.props.children,c=o.map(u=>u===l?s.Children.count(i)>1?s.Children.only(null):s.isValidElement(i)?i.props.children:null:u);return f.jsx(d,{...r,ref:n,children:s.isValidElement(i)?s.cloneElement(i,void 0,c):null})}return f.jsx(d,{...r,ref:n,children:t})});y.displayName="Slot";var d=s.forwardRef((e,n)=>{const{children:t,...r}=e;if(s.isValidElement(t)){const o=S(t);return s.cloneElement(t,{...g(r,t.props),ref:n?m(n,o):o})}return s.Children.count(t)>1?s.Children.only(null):null});d.displayName="SlotClone";var E=({children:e})=>f.jsx(f.Fragment,{children:e});function R(e){return s.isValidElement(e)&&e.type===E}function g(e,n){const t={...n};for(const r in n){const o=e[r],l=n[r];/^on[A-Z]/.test(r)?o&&l?t[r]=(...c)=>{l(...c),o(...c)}:o&&(t[r]=o):r==="style"?t[r]={...o,...l}:r==="className"&&(t[r]=[o,l].filter(Boolean).join(" "))}return{...e,...t}}function S(e){var r,o;let n=(r=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:r.get,t=n&&"isReactWarning"in n&&n.isReactWarning;return t?e.ref:(n=(o=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:o.get,t=n&&"isReactWarning"in n&&n.isReactWarning,t?e.props.ref:e.props.ref||e.ref)}function C(e){const n=s.useRef(e);return s.useEffect(()=>{n.current=e}),s.useMemo(()=>(...t)=>{var r;return(r=n.current)==null?void 0:r.call(n,...t)},[])}function V({prop:e,defaultProp:n,onChange:t=()=>{}}){const[r,o]=v({defaultProp:n,onChange:t}),l=e!==void 0,i=l?e:r,c=C(t),u=s.useCallback(a=>{if(l){const p=typeof a=="function"?a(e):a;p!==e&&c(p)}else o(a)},[l,e,o,c]);return[i,u]}function v({defaultProp:e,onChange:n}){const t=s.useState(e),[r]=t,o=s.useRef(r),l=C(n);return s.useEffect(()=>{o.current!==r&&(l(r),o.current=r)},[r,o,l]),t}export{y as S,C as a,V as b,m as c,E as d,P as u};
